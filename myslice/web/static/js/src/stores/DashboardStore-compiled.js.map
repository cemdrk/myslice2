{"version":3,"sources":["DashboardStore.js"],"names":[],"mappings":";;;;;;qjBAAA;;;;;AAGA;;;;AACA;;;;AACA;;;;;;;;AAEA,IAAI,kBAAkB,SAAlB,eAAkB,CAAS,OAAT,EAAkB,UAAlB,EAA6C;AAAA,QAAf,QAAe,uEAAN,IAAM;;AAC3D,SAAI,IAAI,IAAI,CAAR,EAAW,MAAM,QAAQ,MAA7B,EAAqC,IAAI,GAAzC,EAA8C,GAA9C,EAAmD;AAC/C,YAAG,YAAU,IAAb,EAAkB;AACd,gBAAI,IAAI,QAAQ,CAAR,CAAR;AACH,SAFD,MAEK;AACD,gBAAI,IAAI,QAAQ,CAAR,EAAW,QAAX,CAAR;AACH;AACD,YAAI,MAAM,UAAV,EAAqB;AACjB,oBAAQ,MAAR,CAAe,CAAf,EAAkB,CAAlB;AACA,mBAAO,OAAP;AACH;AACJ;AACD,WAAO,OAAP;AACP,CAbD;;IAeM,c;AAEF,8BAAc;AAAA;;AAGV,aAAK,MAAL,GAAc,EAAd;;AAEA,aAAK,MAAL,GAAc,IAAd;;AAGA,aAAK,aAAL,CAAmB;;AAEf,0BAAc,2BAAQ,aAFP;AAGf,2BAAe,2BAAQ,cAHR;AAIf,2BAAe,2BAAQ,cAJR;AAKf,wBAAY,2BAAQ,WALL;AAMf,4BAAgB,2BAAQ;AANT,SAAnB;;AASA,aAAK,aAAL;AACH;;;;sCAEa,M,EAAQ;;AAElB,iBAAK,MAAL,GAAc,MAAd;;AAEA,gBAAI,CAAC,KAAK,WAAL,GAAmB,SAAnB,EAAL,EAAqC;AACjC,qBAAK,WAAL,GAAmB,KAAnB;AACH;AAEJ;;;uCACc,Q,EAAU;AACrB,gBAAI,SAAS,cAAT,CAAwB,MAAxB,CAAJ,EAAqC;AACjC,qBAAK,QAAL,GAAgB,SAAS,IAAT,CAAc,MAA9B;AACH,aAFD,MAEO;AACH,qBAAK,QAAL,GAAgB,QAAhB;AACH;AACJ;;;mCAEU,M,EAAQ;AACf,iBAAK,MAAL,GAAc,MAAd;AACH;;;qCACY,M,EAAQ;AACjB,gBAAI,OAAO,cAAP,CAAsB,MAAtB,CAAJ,EAAmC;AAC/B,qBAAK,OAAL,CAAa,MAAb,GAAsB,OAAO,IAAP,CAAY,MAAlC;AACH,aAFD,MAEO;AACH,qBAAK,OAAL,CAAa,MAAb,GAAsB,MAAtB;AACH;AACJ;;;sCACa,Y,EAAc;AACxB,oBAAQ,GAAR,CAAY,YAAZ;AACH;;;;;;kBAKU,cAAI,WAAJ,CAAgB,cAAhB,EAAgC,gBAAhC,C","file":"DashboardStore-compiled.js","sourcesContent":["/**\n * Created by amirabradai on 14/10/2016.\n */\nimport alt from '../alt';\nimport actions from '../actions/DashboardActions';\nimport source from '../sources/DashboardSource';\n\nvar removeFromArray = function(myArray, searchTerm, property=null) {\n        for(var i = 0, len = myArray.length; i < len; i++) {\n            if(property==null){\n                var a = myArray[i];\n            }else{\n                var a = myArray[i][property];\n            }\n            if (a === searchTerm){\n                myArray.splice(i, 1);\n                return myArray;\n            }\n        }\n        return myArray;\n};\n\nclass DashboardStore {\n\n    constructor() {\n\n\n        this.filter = [];\n\n        this.dialog = null;\n\n\n        this.bindListeners({\n\n            updateSlices: actions.UPDATE_SLICES,\n            fetchProjects: actions.FETCH_PROJECTS,\n            errorProjects: actions.ERROR_PROJECTS,\n            showDialog: actions.SHOW_DIALOG,\n            updateProjects: actions.UPDATE_PROJECTS,\n        });\n\n        this.registerAsync(source);\n    }\n\n    fetchProjects(filter) {\n\n        this.filter = filter;\n\n        if (!this.getInstance().isLoading()) {\n            this.getInstance().fetch();\n        }\n\n    }\n    updateProjects(projects) {\n        if (projects.hasOwnProperty('data')) {\n            this.projects = projects.data.result;\n        } else {\n            this.projects = projects;\n        }\n    }\n\n    showDialog(dialog) {\n        this.dialog = dialog;\n    }\n    updateSlices(slices) {\n        if (slices.hasOwnProperty('data')) {\n            this.current.slices = slices.data.result;\n        } else {\n            this.current.slices = slices;\n        }\n    }\n    errorProjects(errorMessage) {\n        console.log(errorMessage);\n    }\n\n}\n\n\nexport default alt.createStore(DashboardStore, 'DashboardStore');\n\n"]}